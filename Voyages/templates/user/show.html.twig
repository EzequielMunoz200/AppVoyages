{% extends 'base.html.twig' %}

{% block title %}{{parent()}} - Profil {% endblock %}
{% block stylesheets %}
<link href="{{ asset('css/profile.css') }}" type="text/css" rel="stylesheet" />
{% endblock %}
{% block body %}
<div class="wrapper-user">
    <aside class="user-left">
        <a class="report-profile" href=""><i class="fas fa-exclamation-triangle"></i> Signaler cet profil</a>
        {{ include('/user/show_partials/left.html.twig') }}
    </aside>
    <div class="user-center">
        <img class="avatar-profile" src="{{asset('images/avatars/' ~ user.avatar)}}" alt="">
        {# displays the highest level badge reached #}
        {% set badgeLevel = [] %}
        {% for key, badge in user.badges %}
        {% set badgeLevel = badgeLevel|merge([badge.level]) %}
        {% endfor %}
        {% for badge in user.badges %}
        {% if badge.level == max(badgeLevel) %}
        <img class="badge-profile" src="{{ asset('images/badges/' ~ badge.filename ~ '.svg' ) }}"
            alt="Badge {{ badge.name }}" />
        {% endif %}
        {% endfor %}
        <h4 class="title-profile">{{ user.username }}</h4>
        <div class="text-presentation">{{ user.description|raw }}</div>
        <div class="user-center-info">
            <p>Mes points: {{user.points}}</p>
            <p>Inscrit depuis le: {{user.createdAt|date("d-m-Y")}}</p>
            <p>Derniére conexion le: </p>
        </div>
        <a class="btn btn-info btn-sm link-listes" href="">Mes Listes de villes </a>
        {# displays the highest ROLE reached #}
        {% if 'ROLE_ADMIN' in user.roles %}
        <p class="text-role">Administrateur</p>
        {% else %}
        {% if 'ROLE_MODERATOR' in user.roles %}
        <p class="text-role">Modérateur</p>
        {% else %}
        <p class="text-role">Utilisateur</p>
        {% endif %}
        {% endif %}

        {# displays the highest level badge reached #}
        {% set badgeLevel = [] %}
        {% for key, badge in user.badges %}
        {% set badgeLevel = badgeLevel|merge([badge.level]) %}
        {% endfor %}
        {% for badge in user.badges %}
        {% if badge.level == max(badgeLevel) %}
        {% if badge.level == 4 %}
        <p class="text-role-badge">{{ badge.name }}&nbsp;&nbsp;<i class="fas fa-fighter-jet"></i></p>
        {% else %}
        <p class="text-role-badge">{{ badge.name }}&nbsp;&nbsp;<i class="fas fa-plane"></i></p>
        {% endif %}
        {% endif %}
        {% endfor %}



    </div>
    {% set isLiked = false %}
    {% for userliked in app.user.favoriteUser %}
    {% if userliked.id ==  user.id %}
    {% set isLiked = true %}
    {% endif %}
    {% endfor %}
    <aside class="user-right">
        {% if user != app.user %}
        {# FULL => fas | EMPTY => far#}
        <a class="user-like" href="" data-like="" data-connecteduser="{{ app.user.id }}"
            data-targeteduser="{{ user.id }}">
            {% if isLiked == true %}
            <i class="fas fa-heart"></i>
            {% else %}
            <i class="far fa-heart"></i>
            {% endif %}
        </a>
        {% endif %}
        {{ include('/user/show_partials/right.html.twig') }}
    </aside>




</div>


<style>

</style>

{#    <a href="{{ path('user_index') }}">back to list</a>

    <a href="{{ path('user_edit', {'id': user.id}) }}">edit</a>

    {{ include('user/_delete_form.html.twig') }} #}

<!-- Script pour le like d'un user -->
<script>
    let likeElt = document.querySelector('.user-like');
    let connectedUserId = likeElt.dataset.connecteduser;
    let targetedUserId = likeElt.dataset.targeteduser;
    //let heart = likeElt.querySelectorAll('i');
    likeElt.addEventListener('click', changeHeart);
    function changeHeart(evt) {
        evt.preventDefault();
        let url = '/api/v1/user/' + targetedUserId;
        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            }
        })
            .then(
                (response) => {
                    return response.ok ?
                        (
                            console.log(response.status + ' - opération effectué'),
                            response.json()
                        )

                        :
                        (response.status == 204) ? response.status + ' - pas de resultats'
                            :
                            console.log('L\'opération a échoué')
                })
            .then(
                (data) => {
                    //let icone = evt.target;
                    if (data.code == 200) {
                        likeElt.innerHTML = '';
                        likeElt.innerHTML = '<i class="far fa-heart"></i>';
                        //icone.setAttribute("class", "far fas-heart");
                    } else if (data.code == 201) {
                        likeElt.innerHTML = '';
                        likeElt.innerHTML = '<i class="fas fa-heart"></i>';
                        //icone.setAttribute("class", "fas fas-heart");
                    }
                }
            );
    }

</script>
{% endblock %}